def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg75, arg76):
    var85 = var79(arg76, arg75)
    var89 = func14(var85, arg76)
    result = 1949968191 | var89
    return result
def func13(arg80, arg81):
    var82 = (284 & arg80) - -928272537
    var83 = var82 & (var82 | (arg81 ^ 364 + ((884152257 ^ 410164912) | var82) | -284)) - ((-598 - (var82 & var82)) | 1949669857 + arg81)
    var84 = arg81 & (((var82 & 957) - -902 ^ (var82 | (var83 - var83 & var83 ^ ((arg80 + (var83 ^ var82 + arg81 - arg80) + arg81) | 683865082 | arg80 & var82)) - var82) & arg80) | arg81 ^ -763 ^ 1072572359)
    result = (370 & ((arg80 + arg81) ^ arg80) + var84) ^ var82
    return result
def func12():
    closure = [-1]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func3(arg21, arg22):
    var27 = func4(arg22, arg21)
    if arg22 < arg21:
        var32 = class5()
    else:
        var32 = class7()
    for var33 in range(19):
        var34 = var32.func6
        var34(var27, var33)
    def func9(arg35, arg36):
        var37 = arg35 - 982
        var38 = 1009773150 + arg22
        var39 = (arg35 + (arg36 & arg21)) + arg36
        var40 = arg22 ^ 528
        var41 = var38 & arg36
        var42 = arg22 & var27 + arg22 | arg21
        var43 = -651 - (var40 & -538 & arg21)
        var44 = var42 ^ var42
        var45 = var42 - var43
        var46 = var38 - ((var38 ^ var40) | arg36)
        var47 = var39 | (var44 - (var37 - var41))
        var48 = (var27 ^ (var43 + var38)) ^ var39
        var49 = var38 - var37
        var50 = var38 + (var42 | arg36)
        result = (-138 - var42) + var47
        return result
    var51 = func9(arg22, arg21)
    if arg22 < arg21:
        var52 = arg22 + ((var51 ^ arg21) ^ 587)
    else:
        var52 = (var51 ^ arg22 & 709) | 1838248596
    if arg22 < arg22:
        var53 = arg21 ^ var51
    else:
        var53 = 1359034360 & (var51 | -257) ^ var51
    var54 = 181 - arg21 ^ 670
    var55 = var27 & arg21
    if arg21 < arg21:
        var56 = arg21 & var51 + var54 & -585
    else:
        var56 = (arg22 | -50791147 ^ var55) | -500
    var57 = (arg22 + var51 - 914) - var51
    var58 = -1622908881 + (arg21 + arg22) + var27
    var59 = var51 ^ var58
    var60 = var54 ^ (var55 & var54) & var54
    var61 = var60 | (var55 | var27)
    if var55 < arg21:
        var62 = var61 & (var57 ^ var61)
    else:
        var62 = var51 | var51
    var63 = var57 + 59 & -136 + var57
    var64 = (var27 - var59 + var27) - var63
    var65 = var57 - (var55 + var59 & var54)
    var66 = var61 & var60 + var57 ^ var64
    var67 = (var55 ^ var61) & arg21 ^ var54
    var68 = var51 ^ (var61 + var27 ^ var61)
    if var27 < var55:
        var69 = var59 - var27 + arg21 & -8685425
    else:
        var69 = (var61 - var66 - var59) + -780
    var70 = var51 & var57
    var71 = var55 | var66 ^ 311
    var72 = var58 | var60 - var54 | var67
    var73 = arg21 ^ var57
    var74 = var61 ^ var63
    result = var68 & var55 ^ 572235810 - var73 & (var70 + var74)
    return result
class class7(object):
    def func6(self, arg30, arg31):
        return 0
class class5(class7):
    def func6(self, arg28, arg29):
        return 0
def func4(arg23, arg24):
    var25 = 0
    for var26 in xrange(11):
        var25 += arg23 | var25 | arg24
    return var25
def func2(arg8, arg9):
    var10 = -407341717 | 1803088393 | -502 | 199158043
    var11 = var10 - -948
    var12 = (-1588961506 + (arg9 - arg9)) - arg9
    var13 = (arg8 - -1581865631) ^ var11
    var14 = arg9 | arg8
    var15 = var14 & arg9 - var14 | -921867554
    var16 = (var12 + var15) + var12 + var10
    var17 = var14 | var16
    var18 = var10 + var16 + 1153134948 | var12
    var19 = var13 | (var14 ^ var11 + arg9)
    var20 = -1885000394 - arg9
    result = var12 & (2448906 + var12) + -60
    return result
def func1(arg1, arg2):
    var3 = arg1 & (222 + -151080638)
    var4 = var3 ^ var3 ^ ((var3 - arg1) - (var3 + var3)) + 366
    if arg2 < arg2:
        var5 = 904 + arg1 ^ arg1
    else:
        var5 = arg2 & (((425 - var4 - arg1 ^ var4 & (955 - 1547635959) | var4) ^ var4) - (arg2 & arg2))
    var6 = var3 | (((var4 - (var4 + 163122510)) - var3 & arg1) | 166)
    var7 = ((arg1 - ((var6 - arg1) + var3 | arg1)) & var6) + ((var3 + -220 ^ (arg1 - ((((var3 + (((1276847496 ^ arg2 | -805) & var6) | var4)) | arg1) + -1201045458) ^ arg2) ^ arg1) - var4) | 1080949165) | var3
    result = var4 ^ (var4 - arg2)
    return result
def func14(arg86, arg87):
    closure = [0]
    def func15(acc, rest):
        var88 = 6 & acc
        closure[0] += var88
        if acc == 0:
            return var88
        else:
            result = func15(acc - 1, var88)
            return result
    result = func15(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 3'
    print 'func_number: 10'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 90'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,
